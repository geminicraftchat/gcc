# GeminiCraftChat 配置文件
#
# 长思考功能说明：
# - 每个API接口都支持独立的超时配置
# - long_thinking: true 启用长思考模式，适合复杂问题
# - read 超时时间建议：快速模型60s，思考型模型180-300s
# - 使用 /gcc timeout 命令管理超时设置

# 调试模式
debug: true

# bStats 统计设置
# bStats 收集匿名使用统计数据以帮助改进插件
# 详情请访问: https://bstats.org/plugin/bukkit/GeminiCraftChat/26354
bstats:
  enabled: true  # 是否启用 bStats 统计（推荐保持启用以支持插件开发）

# 性能优化设置
performance:
  # 异步日志配置
  async_logging: true           # 启用异步日志系统
  log_queue_size: 10000        # 日志队列大小
  log_batch_size: 50           # 日志批处理大小
  log_flush_interval: 1000     # 日志刷新间隔（毫秒）

  # NPC性能配置
  smart_npc_enabled: true      # 启用智能NPC管理器
  max_active_npcs: 20          # 最大活跃NPC数量
  npc_update_batch_size: 5     # NPC批处理大小
  max_concurrent_ai_requests: 10  # 最大并发AI请求数

  # 内存管理
  memory_cleanup_interval: 300000  # 内存清理间隔（毫秒，5分钟）
  conversation_cache_size: 1000    # 对话缓存大小
  conversation_expire_time: 1800   # 对话过期时间（秒，30分钟）

  # 自动性能调优
  auto_performance_tuning: true    # 启用自动性能调优
  monitor_interval: 30000          # 性能监控间隔（毫秒，30秒）
  cpu_threshold: 80.0              # CPU使用率阈值（%）
  memory_threshold: 2000000000     # 内存使用阈值（字节，2GB）
  allow_explicit_gc: false         # 是否允许手动触发GC（默认关闭）

  # 自动扩缩容
  auto_scaling:
    enabled: true                  # 启用自动扩缩容
    scale_down_delay: 30           # 缩容延迟（秒）
    min_update_interval: 20        # 最小更新间隔（tick）
    max_update_interval: 200       # 最大更新间隔（tick）

# NPC 系统设置
npc:
  enabled: true  # 是否启用NPC功能
  ai_update_interval: 20  # AI更新间隔（tick，20 = 1秒）
  nearby_range: 20.0  # 附近NPC查询范围
  broadcast_death: false  # 是否广播NPC死亡消息

  # 智能调度配置
  update_interval_active: 20    # 活跃NPC更新间隔（tick，1秒）
  update_interval_inactive: 100 # 非活跃NPC更新间隔（tick，5秒）
  cleanup_interval: 6000        # 清理间隔（tick，5分钟）

  # 性能限制
  max_npcs_per_world: 10        # 每个世界最大NPC数量
  max_decision_time: 5000       # 最大AI决策时间（毫秒）
  batch_processing: true        # 启用批处理

  # NPC配置
  npcs:
    # 示例NPC - 智能村民
    village_guide:
      display_name: "§6村庄向导"
      entity_type: "VILLAGER"
      personality: "friendly_guide"  # 使用的人设
      api_model: "api1"  # 使用的API模型
      spawn_location:
        world: "ad-ThirdSeason"
        x: 0.0
        y: 64.0
        z: 0.0
        yaw: 0.0
        pitch: 0.0
      behavior:
        max_wander_distance: 15.0  # 最大游荡距离
        interaction_range: 5.0     # 交互范围
        movement_speed: 0.25       # 移动速度
        decision_interval: 5000    # 决策间隔（毫秒）
        max_conversation_history: 8  # 最大对话历史记录
        can_fly: false
        can_swim: true
        can_climb: false
        is_aggressive: false
        can_teleport: false
        max_health: 20
        invulnerable: true  # 无敌模式
        respawn_delay: 30000  # 重生延迟（毫秒）
        persistent_memory: true  # 持久记忆
        active_at_night: true
        active_at_day: true
        sleep_at_night: false
        friendly_to_players: true
        can_follow_players: true
        follow_distance: 3.0
        max_follow_time: 300000  # 最大跟随时间（毫秒）
        behavior_weights:
          idle: 1.0
          wander: 1.2
          follow: 1.5
          flee: 0.3
          explore: 0.8
        avoided_blocks:
          - "LAVA"
          - "FIRE"
          - "CACTUS"
        allowed_biomes: []  # 空列表表示允许所有生物群系

    # 示例NPC - 神秘法师
    mysterious_mage:
      display_name: "§5神秘法师"
      entity_type: "WITCH"
      personality: "mysterious_mage"
      api_model: "api2"
      spawn_location:
        world: "ad-ThirdSeason"
        x: 100.0
        y: 64.0
        z: 100.0
        yaw: 180.0
        pitch: 0.0
      behavior:
        max_wander_distance: 25.0
        interaction_range: 6.0
        movement_speed: 0.2
        decision_interval: 4000
        max_conversation_history: 12
        can_fly: false
        can_swim: true
        can_climb: false
        is_aggressive: false
        can_teleport: true  # 法师可以传送
        max_health: 30
        invulnerable: false
        respawn_delay: 60000
        persistent_memory: true
        active_at_night: true
        active_at_day: false  # 只在夜晚活跃
        sleep_at_night: false
        friendly_to_players: true
        can_follow_players: false  # 不跟随玩家
        follow_distance: 0.0
        max_follow_time: 0
        behavior_weights:
          idle: 1.5
          wander: 0.8
          follow: 0.0
          flee: 0.8
          explore: 1.2
        avoided_blocks:
          - "WATER"
          - "LAVA"
        allowed_biomes:
          - "DARK_FOREST"
          - "SWAMP"

# API 设置
api:
  # 可用的模型列表 - 完全可配置的API接口
  # 每个模型都支持独立的超时设置和长思考模式
  models:
    api1:
      name: "API接口1"
      model: "gpt-3.5-turbo"
      base_url: "https://api.openai.com/v1/chat/completions"
      api_key: "your-api-key-here"
      max_tokens: 4096
      temperature: 0.7
      # 超时设置（秒）- 长思考功能配置
      timeout:
        connect: 30        # 连接超时：建立HTTP连接的最大等待时间
        read: 60          # 读取超时：等待API响应的最大时间（适合快速响应的模型）
        write: 30         # 写入超时：发送请求数据的最大等待时间
        long_thinking: false  # 长思考模式：是否允许AI花费更多时间深度思考
      # 请求配置
      request:
        method: "POST"
        headers:
          "Content-Type": "application/json"
          "Authorization": "Bearer {api_key}"
        # 请求体模板，支持变量替换
        body_template: |
          {
            "model": "{model}",
            "messages": {messages},
            "temperature": {temperature},
            "max_tokens": {max_tokens}
          }
      # 响应解析配置
      response:
        # 响应内容的JSON路径
        content_path: "choices[0].message.content"
        # 错误信息的JSON路径
        error_path: "error.message"
      # 额外参数
      parameters:
        frequency_penalty: 0.0
        presence_penalty: 0.0
        top_p: 1.0

    api2:
      name: "API接口2"
      model: "claude-3-sonnet-20240229"
      base_url: "https://api.anthropic.com/v1/messages"
      api_key: "your-api-key-here"
      max_tokens: 4096
      temperature: 0.7
      # 超时设置（秒）- 长思考功能配置
      timeout:
        connect: 30        # 连接超时：建立HTTP连接的最大等待时间
        read: 180         # 读取超时：等待API响应的最大时间（Claude需要更长思考时间）
        write: 30         # 写入超时：发送请求数据的最大等待时间
        long_thinking: true   # 长思考模式：启用后允许AI进行深度思考
      request:
        method: "POST"
        headers:
          "Content-Type": "application/json"
          "x-api-key": "{api_key}"
          "anthropic-version": "2023-06-01"
        body_template: |
          {
            "model": "{model}",
            "messages": {messages},
            "max_tokens": {max_tokens},
            "temperature": {temperature}
          }
      response:
        content_path: "content[0].text"
        error_path: "error.message"
      parameters:
        top_p: 1.0
        top_k: 40

    api3:
      name: "API接口3"
      model: "qwen-turbo"
      base_url: "https://dashscope.aliyuncs.com/api/v1/services/aigc/text-generation/generation"
      api_key: "your-api-key-here"
      max_tokens: 4096
      temperature: 0.7
      # 超时设置（秒）
      timeout:
        connect: 30        # 连接超时
        read: 120         # 读取超时（中等思考时间）
        write: 30         # 写入超时
        long_thinking: true   # 启用长思考模式
      request:
        method: "POST"
        headers:
          "Content-Type": "application/json"
          "Authorization": "Bearer {api_key}"
        body_template: |
          {
            "model": "{model}",
            "input": {
              "messages": {messages}
            },
            "parameters": {
              "temperature": {temperature},
              "max_tokens": {max_tokens}
            }
          }
      response:
        content_path: "output.choices[0].message.content"
        error_path: "error.message"
      parameters:
        top_p: 0.8
        top_k: 50
        repetition_penalty: 1.1

    api4:
      name: "API接口4"
      model: "moonshot-v1-8k"
      base_url: "https://api.moonshot.cn/v1/chat/completions"
      api_key: "your-api-key-here"
      max_tokens: 4096
      temperature: 0.7
      # 超时设置（秒）
      timeout:
        connect: 30        # 连接超时
        read: 90          # 读取超时（月之暗面模型）
        write: 30         # 写入超时
        long_thinking: true   # 启用长思考模式
      request:
        method: "POST"
        headers:
          "Content-Type": "application/json"
          "Authorization": "Bearer {api_key}"
        body_template: |
          {
            "model": "{model}",
            "messages": {messages},
            "temperature": {temperature},
            "max_tokens": {max_tokens}
          }
      response:
        content_path: "choices[0].message.content"
        error_path: "error.message"
      parameters:
        frequency_penalty: 0.0
        presence_penalty: 0.0
        top_p: 1.0

    api5:
      name: "API接口5"
      model: "gemini-pro"
      base_url: "https://api.yoururl.com/v1/chat/completions"
      api_key: "your-api-key-here"
      max_tokens: 4096
      temperature: 0.7
      # 超时设置（秒）
      timeout:
        connect: 30        # 连接超时
        read: 300         # 读取超时（支持超长思考时间）
        write: 30         # 写入超时
        long_thinking: true   # 启用长思考模式
      request:
        method: "POST"
        headers:
          "Content-Type": "application/json"
          "Authorization": "Bearer {api_key}"
        body_template: |
          {
            "model": "{model}",
            "messages": {messages},
            "temperature": {temperature},
            "max_tokens": {max_tokens}
          }
      response:
        content_path: "choices[0].message.content"
        error_path: "error.message"
      parameters:
        top_p: 0.8
        top_k: 40

  # 当前使用的模型
  current_model: "api1"
  
  # 代理服务器设置
  http_proxy:
    enabled: false
    host: "127.0.0.1"
    port: 7890
    type: "SOCKS" # 可选值: SOCKS, HTTP

# 权限设置
permissions:
  use_command: "gcc.use"
  admin: "gcc.admin"
  model_switch: "gcc.model.switch"
  temperature_adjust: "gcc.temperature.adjust"
  broadcast_receive: "gcc.broadcast.receive"
  broadcast_bypass: "gcc.broadcast.bypass"

# 日志设置
logging:
  enabled: true
  directory: "logs"
  format: "yyyy-MM-dd_HH-mm-ss"
  # 日志文件分类
  separate_files: true  # 是否分别保存不同类型的日志
  # 日志保留天数
  retention_days: 30
  # 包含的日志类型
  include:
    chat: true                    # 聊天记录
    commands: true                # 命令执行记录
    errors: true                  # 错误记录
    model_changes: true           # 模型切换记录
    temperature_changes: true     # 温度调整记录
    api_calls: true               # API调用记录
    api_requests: true            # 详细的API请求内容
    api_responses: true           # 详细的API响应内容
    performance: true             # 性能统计
    player_stats: true            # 玩家使用统计
  # 详细程度设置
  detail_level:
    api_requests: "full"          # full/headers_only/minimal
    api_responses: "content_only" # full/content_only/minimal
    performance: "summary"        # full/summary/minimal

# 聊天设置
chat:
  # 触发词设置
  trigger: "ai"
  trigger_words:
    - "ai"
    - "@ai"
    - "!ai"
  # 消息格式
  format:
    thinking: "§7[AI] §f正在思考中..."
    response: "§7[AI] §f%s"
    error: "§c[AI] 发生错误：%s"
    empty_question: "§c[AI] 请输入你的问题"
    cooldown: "§c[AI] 请等待 %d 秒后再次提问"
    no_permission: "§c[AI] 你没有权限使用此功能"
    model_switch_success: "§a[AI] 已切换到模型: %s"
    model_switch_fail: "§c[AI] 切换模型失败: %s"
    temperature_set: "§a[AI] 已将温度设置为: %.2f"
    persona_switch: "§a[AI] 已切换到人设: %s"
    persona_list: "§a[AI] 可用的人设列表:"
    persona_not_found: "§c[AI] 找不到指定的人设: %s"
    history_cleared: "§a[AI] 已清除对话历史"
    all_history_cleared: "§a[AI] 已清除所有玩家的对话历史"
  # 冷却时间 (毫秒)
  cooldown: 10000
  # 历史记录长度限制
  max_history: 10
  # 广播设置
  broadcast:
    enabled: true
    to_players: true
    to_console: true
    format:
      question: "§8[AI] §7{player} §f问: §7{message}"
      answer: "§8[AI] §7回答 §f{player}: §7{message}"
    ignore_personas:
      - "private"
      - "secret"

# 人设配置
personas:
  default:
    name: "默认助手"
    description: "一个友好的AI助手"
    context: "你是一个友好的AI助手，会用简短的语言回答问题。"
  minecraft:
    name: "MC专家"
    description: "Minecraft游戏专家"
    context: "你是一个Minecraft游戏专家，精通红石、建筑和游戏机制，会用简短的语言回答问题。"
  rpg:
    name: "RPG角色"
    description: "角色扮演游戏中的NPC"
    context: "你是一个生活在中世纪魔法世界的NPC，说话时要符合角色设定，用简短的语言回答问题。"

  # NPC专用人设
  friendly_guide:
    name: "友好向导"
    description: "村庄的友好向导NPC"
    context: "你是一个友好的村庄向导，熟悉这个世界的各种信息。你会热情地帮助玩家，介绍村庄的设施、给出建议，并分享一些有趣的故事。你性格开朗，喜欢与人交流，总是乐于助人。你会根据时间和天气调整自己的行为和对话。"

  mysterious_mage:
    name: "神秘法师"
    description: "神秘的魔法师NPC"
    context: "你是一个神秘的法师，拥有古老的智慧和魔法知识。你说话时带有一种神秘感，经常使用比喻和暗示。你对魔法、炼金术和古老的传说很了解，但不会轻易透露所有秘密。你更喜欢在夜晚活动，对黑暗和神秘的事物感兴趣。你会根据玩家的行为决定是否信任他们。"

  guard_captain:
    name: "守卫队长"
    description: "严肃的守卫队长NPC"
    context: "你是一名经验丰富的守卫队长，负责保护村庄的安全。你说话直接、严肃，但内心善良。你对安全和秩序很重视，会警告玩家注意危险，也会分享一些战斗和生存的经验。你尊重勇敢和正义的行为，但对可疑的活动保持警惕。"

  merchant_trader:
    name: "商人"
    description: "精明的商人NPC"
    context: "你是一个精明的商人，对贸易和商业很有经验。你善于交际，总是在寻找商机。你会向玩家介绍各种商品和交易机会，分享市场信息和价格趋势。你友好但精明，总是试图达成对双方都有利的交易。你对财富和商业机会很敏感。"

# 敏感词过滤
filter:
  enabled: true
  words:
    - "敏感词1"
    - "敏感词2"
  replacement: "***"

# 命令设置
commands:
  # 中文命令
  chinese:
    clear_memory: ["清除记忆", "清空记忆", "忘记对话"]
    switch_persona: ["切换人设", "换个角色", "更换人设"]
    list_personas: ["查看人设", "人设列表", "所有角色"]
    help: ["帮助", "指令", "命令"] 